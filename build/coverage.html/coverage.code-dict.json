{"/home/travis/build/npmtest/node-npmtest-social-cms-backend/test.js":"/* istanbul instrument in package npmtest_social_cms_backend */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-social-cms-backend/lib.npmtest_social_cms_backend.js":"/* istanbul instrument in package npmtest_social_cms_backend */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_social_cms_backend = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_social_cms_backend = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-social-cms-backend/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-social-cms-backend && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_social_cms_backend */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_social_cms_backend\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_social_cms_backend.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_social_cms_backend.rollup.js'] =\n            local.assetsDict['/assets.npmtest_social_cms_backend.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_social_cms_backend.__dirname + '/lib.npmtest_social_cms_backend.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-social-cms-backend/node_modules/social-cms-backend/lib/index.js":"/*\n  Copyright (C) 2013-2015, Daishi Kato <daishi@axlight.com>\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nexports.middleware = require('./middleware.js');\nexports.mongodbManager = exports.mongodb_manager = require('./mongodb_manager.js');\nexports.authorizationManager = exports.authorization_manager = require('./authorization_manager.js');\nexports.notificationManager = exports.notification_manager = require('./notification_manager.js');\nexports.socketIo = exports.socket_io = require('./socket_io.js');\n","/home/travis/build/npmtest/node-npmtest-social-cms-backend/node_modules/social-cms-backend/lib/middleware.js":"/*\n  Copyright (C) 2013-2015, Daishi Kato <daishi@axlight.com>\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nvar passport = require('passport');\nvar route_objects = require('./route_objects.js');\n\n/*\n * Common Passport Setup\n */\n\npassport.serializeUser(function(user, done) {\n  done(null, user);\n});\n\npassport.deserializeUser(function(user, done) {\n  done(null, user);\n});\n\n/*\n * convert CamelCase options\n */\n\nfunction convertCamelCaseOptions(options) {\n  if (!options) return;\n  if (typeof options !== 'object') return;\n  Object.keys(options).forEach(function(key) {\n    var newKey = key.replace(/([A-Z])/g, function(match, group1) {\n      return '_' + group1.toLowerCase();\n    });\n    options[newKey] = options[key];\n    convertCamelCaseOptions(options[key]);\n  });\n}\n\n/*\n * The Express middleware\n */\n\nfunction middleware(options) {\n  options = options || {};\n  convertCamelCaseOptions(options);\n\n  require('./mongodb_manager.js').initialize(options);\n  require('./authorization_manager.js').initialize(options);\n  require('./notification_manager.js').initialize(options);\n\n  //for sub middleware\n  var stack = [];\n\n  //emulate app.use\n  var use = function(fn) {\n    stack.push(fn);\n  };\n\n  //emulate app.handle\n  var handle = function(index, req, res, next) {\n    if (stack[index]) {\n      stack[index](req, res, function(err) {\n        if (err) return next(err);\n        handle(index + 1, req, res, next);\n      });\n    } else {\n      next();\n    }\n  };\n\n  //ensure required middleware is loaded\n  use(require('cookie-parser')());\n  use(require('body-parser')({\n    reviver: route_objects.parseJSONReviver\n  }));\n\n  use(options.session_middleware || require('express-session')({\n    secret: options.session_secret || 'this is a fallback session middlware secret'\n  }));\n\n  use(passport.initialize());\n  use(passport.session());\n\n  options.passport_strategy = options.passport_strategy || 'local';\n  if (options.passport_strategy === 'local') {\n    use(require('./authentication/auth_local.js')(options));\n  } else if (options.passport_strategy === 'facebook') {\n    use(require('./authentication/auth_facebook.js')(options));\n  } else if (options.passport_strategy === 'twitter') {\n    use(require('./authentication/auth_twitter.js')(options));\n  } else if (options.passport_strategy === 'digest') {\n    use(require('./authentication/auth_digest.js')(options));\n  } else {\n    //user-specified passport strategy middleware\n    use(options.passport_strategy);\n  }\n\n  use(function(req, res, next) {\n    req.emit('authenticated');\n    if (!req.notAuthenticated && !res.headersSent) {\n      next();\n    }\n  });\n\n  options.routes = options.routes || [{\n    object_type: 'post',\n    object_prefix: '/posts'\n  }, {\n    object_type: 'user',\n    object_prefix: '/users'\n  }, {\n    object_type: 'group',\n    object_prefix: '/groups'\n  }, {\n    object_type: 'like',\n    object_prefix: '/likes'\n  }];\n\n  options.routes.forEach(function(route) {\n    var route_func = route_objects(route.object_type, options);\n    use(function(req, res, next) {\n      if (req.url.lastIndexOf(route.object_prefix, 0) === 0) {\n        req.url = req.url.substring(route.object_prefix.length);\n        route_func(req, res);\n      } else {\n        next();\n      }\n    });\n  });\n\n  return function(req, res, next) {\n    handle(0, req, res, next);\n  };\n}\n\nmodule.exports = middleware;\nmodule.exports.parseJSONReviver = route_objects.parseJSONReviver;\n","/home/travis/build/npmtest/node-npmtest-social-cms-backend/node_modules/social-cms-backend/lib/route_objects.js":"/*\n  Copyright (C) 2013-2015, Daishi Kato <daishi@axlight.com>\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nvar async = require('async');\nvar breezeMongo = require('breeze-mongodb');\n\nvar mongodb_manager = require('./mongodb_manager.js');\nvar authorization_manager = require('./authorization_manager.js');\n\nfunction parseIntSafely(str) {\n  if (/[1-9][0-9]*/.exec(str)) {\n    return parseInt(str, 10);\n  } else {\n    return str;\n  }\n}\n\nfunction parseJSONReviver(key, value) {\n  if (typeof value === 'string') {\n    var match = /^\\/Date\\((\\d+)\\)\\/$/.exec(value);\n    if (match) {\n      return new Date(parseInt(match[1], 10));\n    }\n    var reg_exp_match = /^\\/RegExp\\((.+)\\)\\/$/.exec(value);\n    if (reg_exp_match) {\n      return new RegExp(reg_exp_match[1]);\n    }\n  }\n  return value;\n}\n\nfunction parseJSON(str, callback) {\n  str = str || 'null';\n  try {\n    callback(null, JSON.parse(str, parseJSONReviver));\n  } catch (e) {\n    callback(e);\n  }\n}\n\nfunction DefaultInsertHandler(db, object_type, data, callback) {\n  this.db = db;\n  this.object_type = object_type;\n  this.data = data;\n  this.callback = callback;\n}\n\nDefaultInsertHandler.prototype.run = function() {\n  var self = this;\n  var opts = {\n    w: 1\n  };\n  this.db.collection(this.object_type, function(err, collection) {\n    if (err) return self.callback(err);\n    collection.insert(self.data, opts, function(err, result) {\n      if (err) return self.callback(err);\n      self.callback(null, result.length ? result[0] : result);\n    });\n  });\n};\n\nfunction DefaultFindOneHandler(db, object_type, object_id, callback) {\n  this.db = db;\n  this.object_type = object_type;\n  this.object_id = object_id;\n  this.callback = callback;\n}\n\nDefaultFindOneHandler.prototype.run = function() {\n  var self = this;\n  this.db.collection(this.object_type, function(err, collection) {\n    if (err) return self.callback(err);\n    collection.findOne({\n      _id: parseIntSafely(self.object_id)\n    }, self.callback);\n  });\n};\n\nfunction DefaultFindHandler(db, object_type, query, sort, skip, limit, callback) {\n  this.db = db;\n  this.object_type = object_type;\n  this.query = query || {};\n  this.sort = sort || [\n    ['created_time', 'desc']\n  ];\n  this.skip = skip || 0;\n  this.limit = limit || 20;\n  this.callback = callback;\n}\n\nDefaultFindHandler.prototype.run = function() {\n  var self = this;\n  var opts = {\n    sort: this.sort,\n    skip: this.skip,\n    limit: this.limit\n  };\n  this.db.collection(this.object_type, function(err, collection) {\n    if (err) return self.callback(err);\n    var execQuery = function(query, callback) {\n      collection.find(query, opts, function(err, cursor) {\n        if (err) return callback(err);\n        cursor.toArray(callback);\n      });\n    };\n    if (Array.isArray(self.query)) {\n      async.map(self.query, execQuery, self.callback);\n    } else {\n      execQuery(self.query, self.callback);\n    }\n  });\n};\n\nfunction DefaultCountHandler(db, object_type, query, callback) {\n  this.db = db;\n  this.object_type = object_type;\n  this.query = query || {};\n  this.callback = callback;\n}\n\nDefaultCountHandler.prototype.run = function() {\n  var self = this;\n  this.db.collection(this.object_type, function(err, collection) {\n    if (err) return self.callback(err);\n    var execQuery = function(query, callback) {\n      collection.count(query, function(err, result) {\n        if (err) return callback(err);\n        callback(null, {\n          count: result\n        });\n      });\n    };\n    if (Array.isArray(self.query)) {\n      async.map(self.query, execQuery, self.callback);\n    } else {\n      execQuery(self.query, self.callback);\n    }\n  });\n};\n\nfunction DefaultAggregateHandler(db, object_type, pipeline, callback) {\n  this.db = db;\n  this.object_type = object_type;\n  this.pipeline = pipeline || [];\n  this.callback = callback;\n}\n\nDefaultAggregateHandler.prototype.run = function() {\n  var self = this;\n  this.db.collection(this.object_type, function(err, collection) {\n    if (err) return self.callback(err);\n    collection.aggregate(self.pipeline, function(err, result) {\n      if (err) return self.callback(err);\n      self.callback(null, result);\n    });\n  });\n};\n\nfunction DefaultRemoveHandler(db, object_type, object_id, callback) {\n  this.db = db;\n  this.object_type = object_type;\n  this.object_id = object_id;\n  this.callback = callback;\n}\n\nDefaultRemoveHandler.prototype.run = function() {\n  var self = this;\n  this.db.collection(this.object_type, function(err, collection) {\n    if (err) return self.callback(err);\n    collection.remove({\n      _id: parseIntSafely(self.object_id)\n    }, {\n      w: 1\n    }, function(err) {\n      if (err) {\n        if (err.message === 'no DELETE_OBJECT permission') {\n          return self.callback(err);\n        } else {\n          return self.callback(null, null); //not found\n        }\n      }\n      self.callback(null, true);\n    });\n  });\n};\n\nfunction DefaultUpdateHandler(db, object_type, object_id, data, callback) {\n  delete data._id; // to work nice with angular-resource.js\n  this.db = db;\n  this.object_type = object_type;\n  this.object_id = object_id;\n  this.data = data;\n  this.callback = callback;\n}\n\nDefaultUpdateHandler.prototype.run = function() {\n  var self = this;\n  this.db.collection(this.object_type, function(err, collection) {\n    if (err) return self.callback(err);\n    collection.update({\n      _id: parseIntSafely(self.object_id)\n    }, self.data, {\n      w: 1\n    }, function(err) {\n      if (err) {\n        if (err.message === 'no UPDATE_OBJECT permission') {\n          return self.callback(err);\n        } else {\n          return self.callback(null, null); //not found\n        }\n      }\n      self.callback(null, true);\n    });\n  });\n};\n\n\nmodule.exports = function(object_type, options) {\n  var rePathCount = new RegExp('^/count($|\\\\?)');\n  var rePathAggregate = new RegExp('^/aggregate($|\\\\?)');\n  var rePathInbox = new RegExp('^/inbox($|\\\\?)');\n  var rePathMyself = new RegExp('^/myself$');\n  var rePathId = new RegExp('^/(\\\\w+)$');\n  var rePathNone = new RegExp('^/?($|\\\\?)');\n\n  function handleGet(req, res) {\n    var current_user_id = authorization_manager.getCurrentUserId(req);\n    var handler;\n    var object_id;\n    if (options.breeze_mongo) {\n      var query = new breezeMongo.MongoQuery(req.query);\n      query.execute(mongodb_manager.getWrappedDb(current_user_id), object_type, function(err, results) {\n        if (err) {\n          res.status(403).send('unable to process breeze get query: ' + err);\n        } else {\n          res.setHeader('Content-Type', 'application/json');\n          res.send(results);\n        }\n      });\n    } else if (rePathCount.test(req.url)) {\n      parseJSON(req.query.query, function(err, parsedQuery) {\n        if (err) return res.status(400).send('unable to parse query: ' + err);\n        handler = new DefaultCountHandler(mongodb_manager.getWrappedDb(current_user_id), object_type, parsedQuery, function(err, result) {\n          if (err) {\n            res.status(403).send('unable to count objects: ' + err);\n          } else {\n            res.json(result);\n          }\n        });\n        handler.run();\n      });\n    } else if (rePathAggregate.test(req.url)) {\n      parseJSON(req.query.pipeline, function(err, parsedPipeline) {\n        if (err) return res.status(400).send('unable to parse pipeline: ' + err);\n        handler = new DefaultAggregateHandler(mongodb_manager.getWrappedDb(current_user_id), object_type, parsedPipeline, function(err, result) {\n          if (err) {\n            res.status(403).send('unable to aggregate objects: ' + err);\n          } else {\n            res.json(result);\n          }\n        });\n        handler.run();\n      });\n    } else if (rePathInbox.test(req.url)) {\n      handler = new DefaultFindHandler(mongodb_manager.getWrappedDb(current_user_id), object_type, {\n        'system.followers': current_user_id\n      }, null, req.query.skip, req.query.limit, function(err, result) {\n        if (err) {\n          res.status(403).send('unable to get inbox ' + err);\n        } else {\n          res.json(result);\n        }\n      });\n      handler.run();\n    } else if (rePathMyself.test(req.url)) {\n      if (current_user_id) {\n        object_id = current_user_id;\n        handler = new DefaultFindOneHandler(mongodb_manager.getWrappedDb(current_user_id), object_type, object_id, function(err, result) {\n          if (err) {\n            res.status(403).send('unable to get an object: ' + err);\n          } else if (result) {\n            res.json(result);\n          } else {\n            res.status(404).send('not found');\n          }\n        });\n        handler.run();\n      } else {\n        res.status(403).send('not logged in');\n      }\n    } else if (rePathNone.test(req.url)) {\n      parseJSON(req.query.query, function(err, parsedQuery) {\n        if (err) return res.status(400).send('unable to parse query: ' + err);\n        parseJSON(req.query.sort, function(err, parsedSort) {\n          if (err) return res.status(400).send('unable to parse sort: ' + err);\n          handler = new DefaultFindHandler(mongodb_manager.getWrappedDb(current_user_id), object_type, parsedQuery, parsedSort, req.query.skip, req.query.limit, function(err, result) {\n            if (err) {\n              res.status(403).send('unable to query objects: ' + err);\n            } else {\n              res.json(result);\n            }\n          });\n          handler.run();\n        });\n      });\n    } else {\n      var match = rePathId.exec(req.url);\n      if (match) {\n        object_id = match[1];\n        handler = new DefaultFindOneHandler(mongodb_manager.getWrappedDb(current_user_id), object_type, object_id, function(err, result) {\n          if (err) {\n            res.status(403).send('unable to get an object: ' + err);\n          } else if (result) {\n            res.json(result);\n          } else {\n            res.status(404).send('not found');\n          }\n        });\n        handler.run();\n      } else {\n        res.status(404).send('not found');\n      }\n    }\n  }\n\n  function handlePost(req, res) {\n    var current_user_id = authorization_manager.getCurrentUserId(req);\n    if (options.breeze_mongo) {\n      var saveHandler = new breezeMongo.MongoSaveHandler(mongodb_manager.getWrappedDb(current_user_id), req.body, function(err, results) {\n        if (err) {\n          res.status(403).send('unable to process breeze save handler: ' + err);\n        } else {\n          res.setHeader('Content-Type', 'application/json');\n          res.send(results);\n        }\n      });\n      saveHandler.save();\n    } else if (rePathNone.test(req.url)) {\n      var handler = new DefaultInsertHandler(mongodb_manager.getWrappedDb(current_user_id), object_type, req.body, function(err, result) {\n        if (err) {\n          res.status(403).send('unable to create a new object: ' + err);\n        } else {\n          res.json(result);\n        }\n      });\n      handler.run();\n    } else {\n      res.status(404).send('not found');\n    }\n  }\n\n  function handleDelete(req, res) {\n    var current_user_id = authorization_manager.getCurrentUserId(req);\n    var match = rePathId.exec(req.url);\n    var handler;\n    var object_id;\n    if (match) {\n      object_id = match[1];\n      handler = new DefaultRemoveHandler(mongodb_manager.getWrappedDb(current_user_id), object_type, object_id, function(err, result) {\n        if (err) {\n          res.status(403).send('unable to remove an object: ' + err);\n        } else if (result) {\n          res.json({\n            status: 'ok'\n          });\n        } else {\n          res.status(404).send('not found');\n        }\n      });\n      handler.run();\n    } else {\n      res.status(404).send('not found');\n    }\n  }\n\n  function handlePut(req, res) {\n    var current_user_id = authorization_manager.getCurrentUserId(req);\n    var match = rePathId.exec(req.url);\n    var handler;\n    var object_id;\n    if (match) {\n      object_id = match[1];\n      handler = new DefaultUpdateHandler(mongodb_manager.getWrappedDb(current_user_id), object_type, object_id, req.body, function(err, result) {\n        if (err) {\n          res.status(403).send('unable to update an object: ' + err);\n        } else if (result) {\n          res.json({\n            status: 'ok'\n          });\n        } else {\n          res.status(404).send('not found');\n        }\n      });\n      handler.run();\n    } else {\n      res.status(404).send('not found');\n    }\n  }\n\n\n  return function(req, res) {\n    if (req.method === 'GET') {\n      handleGet(req, res);\n    } else if (req.method === 'POST') {\n      handlePost(req, res);\n    } else if (req.method === 'DELETE') {\n      handleDelete(req, res);\n    } else if (req.method === 'PUT') {\n      handlePut(req, res);\n    } else {\n      res.status(400).send('bad request');\n    }\n  };\n};\n\nmodule.exports.parseJSONReviver = parseJSONReviver;\n","/home/travis/build/npmtest/node-npmtest-social-cms-backend/node_modules/social-cms-backend/lib/mongodb_manager.js":"/*\n  Copyright (C) 2013-2015, Daishi Kato <daishi@axlight.com>\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nvar _ = require('underscore');\nvar async = require('async');\nvar MongoClient = require('mongodb').MongoClient;\nvar authorization_manager = require('./authorization_manager.js');\nvar notification_manager = require('./notification_manager.js');\nvar socket_io = require('./socket_io.js');\n\nvar mongodb_db = null;\n\nfunction getBareCollection(collection_name, callback) {\n  if (!mongodb_db) return callback(new Error('no mongodb connection'));\n\n  mongodb_db.collection(collection_name, function(err, collection) {\n    if (err) return callback(err);\n    callback(null, collection);\n  });\n}\n\nfunction processDestination(current_user_id, object_type, data) {\n  if (!data.destination) return;\n\n  authorization_manager.getFollowers(data.destination, function(err, result) {\n    if (err) return console.log('error getting followers: ' + err);\n\n    getBareCollection(object_type, function(err, collection) {\n      if (err) return console.log('error getting collection: ' + err);\n\n      collection.update({\n        _id: data._id\n      }, {\n        $set: {\n          'system.followers': result\n        }\n      }, {\n        w: 1\n      }, function(err) {\n        if (err) return console.log('error updating system.followers: ' + err);\n        result.forEach(function(user_id) {\n          socket_io.pushObject(user_id, object_type, data);\n        });\n      });\n    });\n  });\n\n  notification_manager.sendNotification(current_user_id, object_type, data);\n}\n\nvar primary_key_map = {};\n\nfunction createPrimaryKey(collection_name, callback) {\n  if (primary_key_map[collection_name]) return callback(null, ++primary_key_map[collection_name]);\n\n  getBareCollection(collection_name, function(err, collection) {\n    if (err) return callback(err);\n\n    collection.find({}, {\n      fields: {\n        _id: 1\n      }\n    }, function(err, cursor) {\n      if (err) return callback(err);\n\n      var max_id = 0;\n      cursor.each(function(err, item) {\n        //ignore err\n        if (item) {\n          if (typeof item._id === 'number' && item._id > max_id) {\n            max_id = item._id;\n          }\n        } else {\n          //end of cursor\n          if (primary_key_map[collection_name]) return callback(null, ++primary_key_map[collection_name]); //in case it's already created by other calls.\n          primary_key_map[collection_name] = max_id + 1;\n          callback(null, max_id + 1);\n        }\n      });\n    });\n  });\n}\n\n\nfunction getWrappedCollection(current_user_id, object_type, collection) {\n  function modifyFields(fields) {\n    // remove 'system' field\n    if (Array.isArray(fields)) {\n      for (;;) {\n        var index = fields.indexOf('system');\n        if (index >= 0) {\n          fields.splice(index, 1);\n        } else {\n          break;\n        }\n      }\n    } else if (fields === Object(fields)) {\n      var inclusiveMode = false;\n      var keys = Object.keys(fields);\n      for (var i = 0; i < keys.length; i++) {\n        if (keys[i]) {\n          inclusiveMode = true;\n          break;\n        }\n      }\n      if (inclusiveMode) {\n        delete fields.system;\n      } else {\n        fields.system = false;\n      }\n    }\n  }\n\n  return {\n    insert: function(data, options, callback) {\n      if (data._id) return callback(new Error('not allowed to specify _id'));\n      if (data.system) return callback(new Error('not allowed to use system area'));\n      if (data.created_time) return callback(new Error('not allowed to specify created_time'));\n      if (data.owner) return callback(new Error('not allowed to specify owner'));\n      if (data.meta) return callback(new Error('not allowed to specify meta'));\n\n      async.every(data.scope || [{\n        public: true\n      }],\n\n      function(item, cb) {\n        var permission_name = 'UNKNOWN';\n        if (item.public) {\n          permission_name = 'CREATE_OBJECT_TO_PUBLIC';\n        } else if (item.group_id) {\n          permission_name = 'CREATE_OBJECT_TO_GROUP:' + item.group_id;\n        } else if (item.user_id) {\n          permission_name = 'CREATE_OBJECT_TO_USER:' + item.user_id;\n        }\n        authorization_manager.hasPermission(current_user_id, permission_name, object_type, data, function(err, ok) {\n          //ignore err\n          cb(ok);\n        });\n      }, function(ok) {\n        if (!ok) return callback(new Error('no permission to create object'));\n\n        data.created_time = new Date();\n        data.owner = {\n          user_id: current_user_id\n        };\n        createPrimaryKey(object_type, function(err, primary_key) {\n          if (err) return callback(err);\n\n          data._id = primary_key;\n\n          collection.insert(data, options, function(err, result) {\n            if (err) return callback(err);\n\n            callback(null, result);\n            processDestination(current_user_id, object_type, data);\n          });\n        });\n      });\n      return null;\n    },\n\n    update: function(query, data, options, callback) {\n      var numKeys = 0;\n      for (var key in data) {\n        numKeys++;\n        if (key.lastIndexOf('$', 0) !== 0) {\n          // not update operator, forcing '$set'\n          data = {\n            $set: data\n          };\n          break;\n        }\n      }\n      if (numKeys === 0) return callback(new Error('data is empty'));\n\n      for (var op in data) {\n        for (var field in data[op]) {\n          field = field.split('.')[0];\n          if (field === '_id') {\n            return callback(new Error('not allowed to specify _id'));\n          } else if (field === 'system') {\n            return callback(new Error('not allowed to use system area'));\n          } else if (field === 'created_time') {\n            return callback(new Error('not allowed to specify created_time'));\n          } else if (field === 'owner') {\n            return callback(new Error('not allowed to specify owner'));\n          } else if (field === 'meta') {\n            return callback(new Error('not allowed to specify meta'));\n          }\n        }\n      }\n\n      var object_id = query._id;\n      if (!object_id) return callback(new Error('no _id found in collection.update'));\n\n      authorization_manager.hasPermission(current_user_id, 'UPDATE_OBJECT', object_type, object_id, function(err, ok) {\n        if (!ok) return callback(new Error('no UPDATE_OBJECT permission'));\n\n        collection.update(query, data, options, callback);\n      });\n      return null;\n    },\n\n    remove: function(query, options, callback) {\n      var object_id = query._id;\n      if (!object_id) return callback(new Error('no _id found in collection.update'));\n\n      authorization_manager.hasPermission(current_user_id, 'DELETE_OBJECT', object_type, object_id, function(err, ok) {\n        if (!ok) return callback(new Error('no DELETE_OBJECT permission'));\n\n        collection.remove(query, options, callback);\n      });\n      return null;\n    },\n\n    findOne: function(query, fields, options, callback) {\n      if (arguments.length === 2) {\n        callback = fields;\n        options = {};\n        fields = null;\n      } else if (arguments.length === 3) {\n        callback = options;\n        options = fields;\n        fields = null;\n      }\n\n      fields = fields || options.fields || {};\n      delete options.fields;\n      modifyFields(fields);\n\n      var object_id = query._id;\n      if (!object_id) return callback(new Error('no _id found in collection.findOne'));\n\n      authorization_manager.hasPermission(current_user_id, 'VIEW_OBJECT', object_type, object_id, function(err, ok) {\n        if (!ok) return callback(new Error('no VIEW_OBJECT permission'));\n\n        collection.findOne(query, fields, options, function(err, data) {\n          //ignore err\n          if (!data) return callback(null, null); //not found\n\n          authorization_manager.checkScope(current_user_id, data.scope, function(err, ok) {\n            //ignore err\n\n            if (ok) {\n              callback(null, data);\n            } else {\n              callback(null, null); //not found\n            }\n          });\n        });\n      });\n      return null;\n    },\n\n    find: function(query, fields, options, callback) {\n      if (arguments.length === 2) {\n        if (typeof fields === 'function') {\n          callback = fields;\n          options = {};\n          fields = null;\n        } else {\n          options = fields;\n          fields = null;\n        }\n      } else if (arguments.length === 3) {\n        if (typeof options === 'function') {\n          callback = options;\n          options = fields;\n          fields = null;\n        }\n      }\n\n      var toArrayCallback = null;\n      var toArray = function(cb) {\n        toArrayCallback = cb;\n      };\n\n      callback = callback || function(err) {\n        if (err) {\n          console.log(err);\n          if (toArrayCallback) {\n            toArrayCallback(err, []);\n          } else {\n            toArray = function(cb) {\n              cb(err, []);\n            };\n          }\n        }\n        return null;\n      };\n\n      fields = fields || options.fields || {};\n      delete options.fields;\n      modifyFields(fields);\n\n      authorization_manager.hasPermission(current_user_id, 'VIEW_OBJECTS', object_type, query, function(err, ok) {\n        if (!ok) return callback(new Error('no VIEW_OBJECTS permission'));\n\n        authorization_manager.getScopeCriteria(current_user_id, function(err, criteria) {\n          if (err) return callback(err);\n\n          query = Object.keys(query).length > 0 ? {\n            $and: [query, {\n              $or: criteria\n            }]\n          } : {\n            $or: criteria\n          };\n          collection.find(query, fields, options, function(err, cursor) {\n            if (err) return callback(err);\n\n            callback(null, cursor);\n            if (toArrayCallback) cursor.toArray(toArrayCallback);\n          });\n        });\n      });\n\n      return {\n        toArray: toArray\n      };\n    },\n\n    count: function(query, options, callback) {\n      if (arguments.length === 2) {\n        callback = options;\n        options = {};\n      }\n\n      authorization_manager.hasPermission(current_user_id, 'COUNT_OBJECTS', object_type, query, function(err, ok) {\n        if (!ok) return callback(new Error('no COUNT_OBJECTS permission'));\n\n        authorization_manager.getScopeCriteria(current_user_id, function(err, criteria) {\n          if (err) return callback(err);\n\n          query = Object.keys(query).length > 0 ? {\n            $and: [query, {\n              $or: criteria\n            }]\n          } : {\n            $or: criteria\n          };\n          collection.count(query, options, callback);\n        });\n      });\n      return null;\n    },\n\n    aggregate: function(pipeline, options, callback) {\n      if (arguments.length === 2) {\n        callback = options;\n        options = {};\n      }\n\n      authorization_manager.hasPermission(current_user_id, 'AGGREGATE_OBJECTS', object_type, pipeline, function(err, ok) {\n        if (!ok) return callback(new Error('no AGGREGATE_OBJECTS permission'));\n\n        authorization_manager.getScopeCriteria(current_user_id, function(err, criteria) {\n          if (err) return callback(err);\n\n          pipeline.unshift({\n            $match: {\n              $or: criteria\n            }\n          });\n          collection.aggregate(pipeline, options, callback);\n        });\n      });\n      return null;\n    }\n\n  };\n}\n\nfunction getWrappedDb(current_user_id) {\n  return {\n    collection: function(object_type, options, callback) {\n      if (arguments.length === 2) {\n        callback = options;\n        options = {};\n      }\n      getBareCollection(object_type, function(err, collection) {\n        if (err) return callback(err);\n        callback(null, getWrappedCollection(current_user_id, object_type, collection));\n      });\n    }\n  };\n}\n\nfunction ensureUniqueIndex(collection_name, fields) {\n  if (!Array.isArray(fields)) {\n    fields = [fields];\n  }\n  getBareCollection(collection_name, function(err, collection) {\n    if (err) return console.log('failed to get a collection.', err);\n\n    collection.ensureIndex(_.object(_.map(fields, function(x) {\n      return [x, 1];\n    })), {\n      unique: true\n    }, function(err) {\n      if (err) return console.log('failed to ensure index.', err);\n    });\n  });\n}\n\n\nfunction initialize(options) {\n  var mongodb_url = options.mongodb_url || 'mongodb://localhost:27017/socialcmsdb';\n  MongoClient.connect(mongodb_url, function(err, db) {\n    if (err) return console.log('Unable to connect to MongoDB: ' + mongodb_url);\n\n    console.log('Connected to MongoDB.');\n    mongodb_db = db;\n\n    var ensure_unique_index = options.ensure_unique_index;\n    if (ensure_unique_index) {\n      if (!Array.isArray(ensure_unique_index)) {\n        ensure_unique_index = [ensure_unique_index];\n      }\n      _.each(ensure_unique_index, function(x) {\n        if (x.object_type && x.object_fields) {\n          ensureUniqueIndex(x.object_type, x.object_fields);\n        } else {\n          console.log('invalid ensure_unique_index option');\n        }\n      });\n    }\n  });\n}\n\n\nexports.initialize = initialize;\nexports.getBareCollection = getBareCollection;\nexports.getWrappedDb = getWrappedDb;\nexports.createPrimaryKey = createPrimaryKey;\n","/home/travis/build/npmtest/node-npmtest-social-cms-backend/node_modules/social-cms-backend/lib/authorization_manager.js":"/*\n  Copyright (C) 2013-2015, Daishi Kato <daishi@axlight.com>\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nvar async = require('async');\nvar _ = require('underscore');\nvar mongodb_manager = require('./mongodb_manager.js');\n\nvar authorization_mode;\nvar always_follow_myself;\n\nfunction initialize(options) {\n  authorization_mode = options.authorization_mode || 'standard';\n  always_follow_myself = options.always_follow_myself || false;\n}\n\nfunction getCurrentUserId(req) {\n  return req.user;\n}\n\nfunction getCurrentUserObject(req, callback) {\n  var current_user_id = getCurrentUserId(req);\n  mongodb_manager.getBareCollection('user', function(err, collection) {\n    if (err) return callback(err);\n\n    collection.findOne({\n      _id: current_user_id\n    }, callback);\n  });\n}\n\nfunction getJoinedGroups(user_id, callback) {\n  var opts = {\n    fields: {\n      _id: true\n    }\n  };\n\n  mongodb_manager.getBareCollection('group', function(err, collection) {\n    if (err) return callback(err);\n\n    var groups = [];\n    collection.find({\n      'members.user_id': user_id\n    }, opts, function(err, cursor) {\n      if (err) return callback(err);\n\n      var findParentGroups = function(seedGroups, cb) {\n        collection.find({\n          'members.group_id': {\n            $in: seedGroups\n          }\n        }, opts, function(err, cursor) {\n          if (err) return cb(err);\n\n          var newGroups = [];\n          cursor.each(function(err, item) {\n            //ignore error\n            if (item) {\n              if (groups.indexOf(item._id) === -1) {\n                groups.push(item._id);\n                newGroups.push(item._id);\n              }\n            } else {\n              //end of cursor\n              if (newGroups.length) {\n                findParentGroups(newGroups, cb);\n              } else {\n                cb();\n              }\n            }\n          });\n        });\n      };\n\n      cursor.each(function(err, item) {\n        //ignore error\n        if (item) {\n          groups.push(item._id);\n        } else {\n          //end of cursor\n          findParentGroups(groups, function(err) {\n            if (err) return callback(err);\n            callback(null, groups);\n          });\n        }\n      });\n\n    });\n  });\n}\n\nfunction isFriendEachOther(user_id, target_user_id, callback) {\n  var opts = {\n    fields: {\n      _id: true\n    }\n  };\n\n  mongodb_manager.getBareCollection('user', function(err, collection) {\n    if (err) return callback(err);\n\n    async.parallel(\n      [\n        function(cb) {\n          collection.findOne({\n            _id: user_id,\n            'friends.user_id': target_user_id\n          }, opts, cb);\n        },\n\n        function(cb) {\n          collection.findOne({\n            _id: target_user_id,\n            'friends.user_id': user_id\n          }, opts, cb);\n        }\n      ],\n\n      function(err, result) {\n        if (err) return callback(err);\n        callback(null, !!(result[0] && result[1]));\n      });\n  });\n}\n\nfunction parseIntSafely(str) {\n  if (/[1-9][0-9]*/.exec(str)) {\n    return parseInt(str, 10);\n  } else {\n    return str;\n  }\n}\n\nfunction getOwner(object_type, data_id, callback) {\n  var opts = {\n    fields: {\n      owner: true\n    }\n  };\n\n  mongodb_manager.getBareCollection(object_type, function(err, collection) {\n    if (err) return callback(err);\n\n    collection.findOne({\n      _id: parseIntSafely(data_id)\n    }, opts, function(err, data) {\n      //ignore error\n      callback(null, data && data.owner);\n    });\n  });\n}\n\n\nfunction hasPermissionStandard(user_id, permission, object_type, target, callback) {\n  if (!user_id) return callback(null, false); //not logged in\n\n  if (permission === 'CREATE_OBJECT_TO_PUBLIC') {\n    callback(null, true);\n  } else if (permission.lastIndexOf('CREATE_OBJECT_TO_GROUP:', 0) === 0) {\n    var group_id = parseIntSafely(permission.substring('CREATE_OBJECT_TO_GROUP:'.length));\n    getJoinedGroups(user_id, function(err, joined_groups) {\n      if (err) return callback(err);\n      callback(null, joined_groups.indexOf(group_id) >= 0);\n    });\n  } else if (permission.lastIndexOf('CREATE_OBJECT_TO_USER:', 0) === 0) {\n    var target_user_id = parseIntSafely(permission.substring('CREATE_OBJECT_TO_USER:'.length));\n    if (user_id === target_user_id) return callback(null, true);\n    isFriendEachOther(user_id, target_user_id, callback);\n  } else if (permission === 'DELETE_OBJECT' || permission === 'UPDATE_OBJECT') {\n    if (!target) return callback(null, false);\n    getOwner(object_type, target, function(err, owner) {\n      if (err) return callback(err);\n      callback(null, owner && user_id === owner.user_id);\n    });\n  } else if (permission === 'VIEW_OBJECT' || permission === 'VIEW_OBJECTS' || permission === 'COUNT_OBJECTS' || permission === 'AGGREGATE_OBJECTS') {\n    callback(null, true);\n  } else {\n    callback(null, false); //no permission\n  }\n}\n\nfunction hasPermission(user_id, permission, object_type, target, callback) {\n  if (typeof authorization_mode === 'function') return authorization_mode(user_id, permission, object_type, target, callback);\n  switch (authorization_mode) {\n    case 'standard':\n      hasPermissionStandard(user_id, permission, object_type, target, callback);\n      break;\n    default:\n      callback(null, false); //no permission at all\n  }\n}\n\nfunction checkScope(user_id, scope, callback) {\n  if (!scope) return callback(null, true); //public scope\n\n  if (_.find(scope, function(x) {\n    return x && x.user_id === user_id;\n  })) return callback(null, true); //user scope\n\n  getJoinedGroups(user_id, function(err, joined_groups) {\n    if (err) return callback(err);\n\n    if (_.some(joined_groups, function(group_id) {\n      return _.find(scope, function(x) {\n        return x && x.group_id === group_id;\n      });\n    })) {\n      callback(null, true); //group scope\n    } else {\n      callback(null, false); //no scope\n    }\n  });\n}\n\nfunction getScopeCriteria(user_id, callback) {\n  getJoinedGroups(user_id, function(err, joined_groups) {\n    if (err) return callback(err);\n\n    var criteria = [{\n      'scope': {\n        $exists: false\n      }\n    }, {\n      'scope.user_id': user_id\n    }];\n    joined_groups.forEach(function(group_id) {\n      criteria.push({\n        'scope.group_id': group_id\n      });\n    });\n    callback(null, criteria);\n  });\n}\n\nfunction getFollowers(target_list, callback) {\n  if (!Array.isArray(target_list)) {\n    target_list = [target_list];\n  }\n  var followers = [];\n  var opts = {\n    fields: {\n      _id: true\n    }\n  };\n  async.each(target_list, function(target, cb) {\n    mongodb_manager.getBareCollection('user', function(err, collection) {\n      if (err) return callback(err);\n\n      if (always_follow_myself && target.user_id) {\n        if (followers.indexOf(target.user_id) === -1) {\n          followers.push(target.user_id);\n        }\n      }\n\n      var query = _.object(_.map(_.pairs(target), function(x) {\n        return ['following.' + x[0], x[1]];\n      }));\n      collection.find(query, opts, function(err, cursor) {\n        if (err) return cb(err);\n\n        cursor.each(function(err, item) {\n          //ignore error\n          if (item) {\n            if (followers.indexOf(item._id) === -1) {\n              followers.push(item._id);\n            }\n          } else {\n            //end of cursor\n            cb();\n          }\n        });\n      });\n    });\n  },\n\n    function(err) {\n      if (err) return callback(err);\n\n      callback(null, followers);\n    });\n}\n\nexports.initialize = initialize;\nexports.getCurrentUserId = getCurrentUserId;\nexports.getCurrentUserObject = getCurrentUserObject;\nexports.hasPermissionStandard = hasPermissionStandard;\nexports.hasPermission = hasPermission;\nexports.checkScope = checkScope;\nexports.getScopeCriteria = getScopeCriteria;\nexports.getFollowers = getFollowers;\n","/home/travis/build/npmtest/node-npmtest-social-cms-backend/node_modules/social-cms-backend/lib/notification_manager.js":"/*\n  Copyright (C) 2013-2014, Daishi Kato <daishi@axlight.com>\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nvar _ = require('underscore');\nvar FB = require('fb');\nvar mongodb_manager = require('./mongodb_manager.js');\n\nvar notification_mode;\nvar facebook_app_id;\nvar facebook_app_secret;\n\nfunction initialize(options) {\n  notification_mode = options.notification_mode || 'standard';\n  facebook_app_id = options.facebook_app_id;\n  facebook_app_secret = options.facebook_app_secret;\n}\n\nfunction sendFacebookAppNotification(facebook_user_id, href, template) {\n  if (!facebook_app_id || !facebook_app_secret) return;\n  FB.api(facebook_user_id + '/notifications', 'post', {\n    href: href,\n    template: template\n  }, function(res) {\n    if (res && res.error && res.error.type === 'OAuthException') {\n      FB.setAccessToken(null);\n      FB.api('oauth/access_token', {\n        client_id: facebook_app_id,\n        client_secret: facebook_app_secret,\n        grant_type: 'client_credentials'\n      }, function(res) {\n        if (!res || res.error) {\n          console.log('error occurred when getting facebook app access token:', res && res.error);\n          return;\n        }\n        FB.setAccessToken(res.access_token);\n        FB.api(facebook_user_id + '/notifications', 'post', {\n          href: href,\n          template: template\n        }, function(res) {\n          if (!res || res.error) {\n            console.log('error occurred:', res && res.error);\n          } else {\n            //no callback\n          }\n        });\n      });\n    } else {\n      //no callback\n    }\n  });\n}\n\nfunction sendNotificationStandard(user_id, object_type, data) {\n  mongodb_manager.getBareCollection('user', function(err, collection) {\n    if (err) return console.log('unable to get user collection');\n\n    var destination = (Array.isArray(data.destination) ? data.destination : [data.destination]);\n    if (_.find(destination, function(x) {\n      return x && x.user_id === user_id;\n    })) {\n      collection.findOne({\n        _id: user_id\n      }, function(err, result) {\n        if (err) return console.log('unable to get user data');\n\n        if (result.system.facebook_user_id) {\n          var template = (typeof data.message === 'string' ? data.message.substring(0, 180) : 'You got a new data: ' + object_type);\n          sendFacebookAppNotification(result.system.facebook_user_id, '?ref=appnotification', template);\n        }\n      });\n    }\n  });\n}\n\nfunction sendNotification(user_id, object_type, data) {\n  if (typeof notification_mode === 'function') return notification_mode(user_id, object_type, data);\n  switch (notification_mode) {\n    case 'standard':\n      sendNotificationStandard(user_id, object_type, data);\n      break;\n    default:\n      //do nothing\n  }\n}\n\nexports.initialize = initialize;\nexports.sendNotificationStandard = sendNotificationStandard;\nexports.sendNotification = sendNotification;\n","/home/travis/build/npmtest/node-npmtest-social-cms-backend/node_modules/social-cms-backend/lib/socket_io.js":"/*\n  Copyright (C) 2013, Daishi Kato <daishi@axlight.com>\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nvar http = require('http');\nvar passport = require('passport');\n\nvar socketMap = {};\n\nfunction pushObject(user_id, object_type, data) {\n  var socket = socketMap[user_id];\n  if (socket) {\n    socket.emit('new-' + object_type, data);\n  }\n}\n\n/*\n * The socket.io middleware\n */\n\nfunction socket_io(options) {\n  options = options || {};\n\n  //for sub middleware\n  var stack = [];\n\n  //emulate app.use\n  var use = function(fn) {\n    stack.push(fn);\n  };\n\n  //emulate app.handle\n  var handle = function(index, req, res, next) {\n    if (stack[index]) {\n      stack[index](req, res, function(err) {\n        if (err) return next(err);\n        handle(index + 1, req, res, next);\n      });\n    } else {\n      next();\n    }\n  };\n\n  use(require('cookie-parser')());\n\n  if (!options.session_middleware) {\n    throw new Error('options.session_middleware is not set');\n  }\n  use(options.session_middleware);\n\n  use(passport.initialize());\n  use(passport.session());\n\n  return function(socket, next) {\n    var req = socket.request;\n    var res = new http.ServerResponse(req); //dummy\n    req.originalUrl = req.originalUrl || req.url;\n    handle(0, req, res, function(err) {\n      if (err) return next(err);\n      if (!req.user) return next(new Error('no session for socket.io'));\n\n      var user_id = req.user;\n      socketMap[user_id] = socket;\n      socket.on('disconnect', function() {\n        delete socketMap[user_id];\n      });\n\n      next();\n    });\n  };\n}\n\nmodule.exports = socket_io;\nmodule.exports.pushObject = pushObject;\n"}